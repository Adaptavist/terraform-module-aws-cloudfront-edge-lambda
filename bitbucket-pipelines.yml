image: adaptavist/all-tools:openjdk11-latest-0.13.5
definitions:  
  check: &check
    name: Check HCL    
    script:
      - (echo ${PIPELINE_GIT_PRIVATE_KEY} | base64 -d >> ~/.ssh/id_rsa) && chmod 0600 ~/.ssh/id_rsa
      - terraform fmt -check -recursive -diff

  edge-lambda-tests: &edge-lambda-tests
    name: Edge Lambda Tests    
    script:
      - (cd lambda && npm install && AWS_ACCESS_KEY_ID="${TF_TEST_AWS_ACCESS_KEY_ID}" AWS_SECRET_ACCESS_KEY="${TF_TEST_AWS_SECRET_ACCESS_KEY}" npm test)

  intergration-tests: &intergration-tests
    name: Integration Tests    
    script:
      - (apk add --update go)      
      - (cd test && AWS_ACCESS_KEY_ID="${TF_TEST_AWS_ACCESS_KEY_ID}" AWS_SECRET_ACCESS_KEY="${TF_TEST_AWS_SECRET_ACCESS_KEY}" go test -timeout 60m)

  compliance: &compliance
    name: Compliance    
    script:
      - (cd test/fixture && AWS_ACCESS_KEY_ID="${TF_TEST_AWS_ACCESS_KEY_ID}" AWS_SECRET_ACCESS_KEY="${TF_TEST_AWS_SECRET_ACCESS_KEY}" terraform init -backend-config="key=modules/module-aws-cloudfront-router/tests/fixures/default/compliance-test.tfstate")
      - (cd test/fixture && AWS_ACCESS_KEY_ID="${TF_TEST_AWS_ACCESS_KEY_ID}" AWS_SECRET_ACCESS_KEY="${TF_TEST_AWS_SECRET_ACCESS_KEY}" terraform plan -out=plan.out)
      - (cd test/fixture && AWS_ACCESS_KEY_ID="${TF_TEST_AWS_ACCESS_KEY_ID}" AWS_SECRET_ACCESS_KEY="${TF_TEST_AWS_SECRET_ACCESS_KEY}" terraform-compliance -f git:https://github.com/Adaptavist/terraform-compliance.git -p plan.out)

  release: &release
    name: Release
    image: node:13
    caches:
      - node
    script:
      - npm install --save-dev
      - npx semantic-release -r ${BITBUCKET_GIT_HTTP_ORIGIN}

pipelines:
  default:
    - step: *check
    - step: *compliance
    - step: *edge-lambda-tests
    - step: *intergration-tests
  branches:
    master:
      - step: *check
      - step: *compliance
      - step: *edge-lambda-tests
      - step: *intergration-tests
      - step: *release